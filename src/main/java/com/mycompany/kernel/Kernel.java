/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package com.mycompany.kernel;
import java.awt.Color;
import java.util.ArrayList;
import java.util.*;
import javax.swing.ListModel;




/**
 *
 * @author HarugeS
 */

public class Kernel extends javax.swing.JFrame {
    Contenedor conte = new Contenedor("pcb.txt");
        String procesoLista = "";
        String listaIndice = "";
    public Kernel() {
        
        initComponents();
        System.out.println(ListaRunningIn.getSelectedIndex());
        tiempo.setText(""+conte.reloj);
        conte.actualizarListas(conte.reloj);
        Vector<String> nombres;
        //READY
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaReady.size(); x++){
            nombres.add(conte.listaReady.get(x).nombre);
        }
        ListaRedyIn.setListData(nombres);

        //RUNNING
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaRunning.size(); x++){
            nombres.add(conte.listaRunning.get(x).nombre);
        }
        ListaRunningIn.setListData(nombres);

        //BLOCKED
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaBlocked.size(); x++){
            nombres.add(conte.listaBlocked.get(x).nombre);
        }
        ListaBlockedIn.setListData(nombres);

        //FINISHED
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaFinished.size(); x++){
            nombres.add(conte.listaFinished.get(x).nombre);
        }
        ListaFinishedIn.setListData(nombres);

        
        if(conte.listaRunning.size() > 0 && conte.listaRunning.get(0) != null) {
            cpuNombreIn.setText(conte.listaRunning.get(0).nombre);
            cpuTiempoIn.setText(""+conte.listaRunning.get(0).tiempoLlegada);
            cpuAsignadoIn.setText(""+conte.listaRunning.get(0).cpuAsignado);
            cpuEnvejecimientoIn.setText(""+conte.listaRunning.get(0).envejecimiento);
            cpuRestanteIn.setText(""+conte.listaRunning.get(0).cpuRestante);
            cpuQuantumIn.setText(""+conte.listaRunning.get(0).quantumRestante);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        Ejecutar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dropdownInterrupcion = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        Nuevo = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        agregarProcesos = new javax.swing.JButton();
        nombreProceso = new javax.swing.JTextField();
        nombrePagina = new javax.swing.JTextField();
        nombreEjec = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Listos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaRedyIn = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        panelCPU = new javax.swing.JPanel();
        nombreSchedule = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cpuNombreIn = new javax.swing.JLabel();
        nombreSchedule1 = new javax.swing.JLabel();
        cpuTiempoIn = new javax.swing.JLabel();
        nombreSchedule2 = new javax.swing.JLabel();
        cpuAsignadoIn = new javax.swing.JLabel();
        nombreSchedule3 = new javax.swing.JLabel();
        cpuEnvejecimientoIn = new javax.swing.JLabel();
        nombreSchedule4 = new javax.swing.JLabel();
        cpuRestanteIn = new javax.swing.JLabel();
        cpuQuantumIn = new javax.swing.JLabel();
        nombreSchedule5 = new javax.swing.JLabel();
        PanelCPU = new javax.swing.JPanel();
        dropdownScheduling = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        TamQuantum = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        tiempo = new javax.swing.JLabel();
        Listos1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaRunningIn = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        Listos2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListaBlockedIn = new javax.swing.JList<>();
        jLabel12 = new javax.swing.JLabel();
        Listos3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ListaFinishedIn = new javax.swing.JList<>();
        jLabel13 = new javax.swing.JLabel();
        errorTexto = new javax.swing.JLabel();
        botonInterrupcion = new javax.swing.JButton();

        jTextField4.setText("jTextField4");

        jTextField5.setText("jTextField5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        Ejecutar.setBackground(new java.awt.Color(153, 255, 153));
        Ejecutar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Ejecutar.setText("Ejecutar");
        Ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EjecutarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Tiempo Actual:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Interrupci√≥n:");

        dropdownInterrupcion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dropdownInterrupcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SVC de Solicitud de I/O", "SVC de Terminacion Normal", "SVC de Solicitud de Fecha", "Error de Programa", "Externa de Quantum Expirado", "Dispositivo de I/O" }));
        dropdownInterrupcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropdownInterrupcionActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Procesos");

        Nuevo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Nuevo.setMaximumSize(new java.awt.Dimension(50, 50));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Nombre:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Paginas:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Ejec Total:");

        agregarProcesos.setText("Agregar");
        agregarProcesos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarProcesosActionPerformed(evt);
            }
        });

        nombreProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreProcesoActionPerformed(evt);
            }
        });

        nombreEjec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreEjecActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Nuevos");

        javax.swing.GroupLayout NuevoLayout = new javax.swing.GroupLayout(Nuevo);
        Nuevo.setLayout(NuevoLayout);
        NuevoLayout.setHorizontalGroup(
            NuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NuevoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(NuevoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nombreProceso))
                    .addComponent(agregarProcesos)
                    .addGroup(NuevoLayout.createSequentialGroup()
                        .addGroup(NuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(NuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nombreEjec, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(nombrePagina, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(19, 19, 19))
            .addGroup(NuevoLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        NuevoLayout.setVerticalGroup(
            NuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NuevoLayout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(NuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nombreProceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nombrePagina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(nombreEjec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(agregarProcesos)
                .addContainerGap())
        );

        Listos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Listos.setPreferredSize(new java.awt.Dimension(122, 187));

        ListaRedyIn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ListaRedyIn.setFocusable(false);
        ListaRedyIn.setSelectionBackground(new java.awt.Color(51, 153, 255));
        ListaRedyIn.setValueIsAdjusting(true);
        ListaRedyIn.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ListaRedyInComponentShown(evt);
            }
        });
        ListaRedyIn.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaRedyInValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ListaRedyIn);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Ready");

        javax.swing.GroupLayout ListosLayout = new javax.swing.GroupLayout(Listos);
        Listos.setLayout(ListosLayout);
        ListosLayout.setHorizontalGroup(
            ListosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(ListosLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel10)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        ListosLayout.setVerticalGroup(
            ListosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListosLayout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("CPU");

        panelCPU.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        nombreSchedule.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nombreSchedule.setText("Nombre: ");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setText("Scheduling");

        cpuNombreIn.setText("-");

        nombreSchedule1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nombreSchedule1.setText("Tiempo Llegada:");

        cpuTiempoIn.setText("-");

        nombreSchedule2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nombreSchedule2.setText("CPU Asignado:");

        cpuAsignadoIn.setText("-");

        nombreSchedule3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nombreSchedule3.setText("Envejecimiento:");

        cpuEnvejecimientoIn.setText("-");

        nombreSchedule4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nombreSchedule4.setText("CPU Restante:");

        cpuRestanteIn.setText("-");

        cpuQuantumIn.setText("-");

        nombreSchedule5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nombreSchedule5.setText("Quantum Restante:");

        javax.swing.GroupLayout panelCPULayout = new javax.swing.GroupLayout(panelCPU);
        panelCPU.setLayout(panelCPULayout);
        panelCPULayout.setHorizontalGroup(
            panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPULayout.createSequentialGroup()
                .addGroup(panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCPULayout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jLabel14))
                    .addGroup(panelCPULayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCPULayout.createSequentialGroup()
                                .addComponent(nombreSchedule1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpuTiempoIn))
                            .addGroup(panelCPULayout.createSequentialGroup()
                                .addComponent(nombreSchedule)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpuNombreIn))
                            .addGroup(panelCPULayout.createSequentialGroup()
                                .addComponent(nombreSchedule2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpuAsignadoIn))
                            .addGroup(panelCPULayout.createSequentialGroup()
                                .addComponent(nombreSchedule3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpuEnvejecimientoIn))
                            .addGroup(panelCPULayout.createSequentialGroup()
                                .addComponent(nombreSchedule4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpuRestanteIn))
                            .addGroup(panelCPULayout.createSequentialGroup()
                                .addComponent(nombreSchedule5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpuQuantumIn)))))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        panelCPULayout.setVerticalGroup(
            panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCPULayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreSchedule)
                    .addComponent(cpuNombreIn))
                .addGap(18, 18, 18)
                .addGroup(panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreSchedule1)
                    .addComponent(cpuTiempoIn))
                .addGap(18, 18, 18)
                .addGroup(panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreSchedule2)
                    .addComponent(cpuAsignadoIn))
                .addGap(18, 18, 18)
                .addGroup(panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreSchedule3)
                    .addComponent(cpuEnvejecimientoIn))
                .addGap(18, 18, 18)
                .addGroup(panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreSchedule4)
                    .addComponent(cpuRestanteIn))
                .addGap(18, 18, 18)
                .addGroup(panelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreSchedule5)
                    .addComponent(cpuQuantumIn))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        PanelCPU.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        dropdownScheduling.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        dropdownScheduling.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FIFO", "Round Robin", "SRT", "HRRN" }));
        dropdownScheduling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropdownSchedulingActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Tam. Quantum:");

        TamQuantum.setEnabled(false);
        TamQuantum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TamQuantumActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel15.setText("Algoritmo");

        jLabel16.setText("Presione enter para reflejar el tama√±o");

        javax.swing.GroupLayout PanelCPULayout = new javax.swing.GroupLayout(PanelCPU);
        PanelCPU.setLayout(PanelCPULayout);
        PanelCPULayout.setHorizontalGroup(
            PanelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCPULayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dropdownScheduling, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelCPULayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TamQuantum, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCPULayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCPULayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(93, 93, 93))
        );
        PanelCPULayout.setVerticalGroup(
            PanelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCPULayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(8, 8, 8)
                .addComponent(dropdownScheduling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelCPULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(TamQuantum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tiempo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tiempo.setText("0");

        Listos1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Listos1.setPreferredSize(new java.awt.Dimension(122, 187));

        ListaRunningIn.setFocusable(false);
        ListaRunningIn.setSelectionBackground(new java.awt.Color(51, 153, 255));
        ListaRunningIn.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ListaRunningInComponentShown(evt);
            }
        });
        ListaRunningIn.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaRunningInValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ListaRunningIn);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("Running");

        javax.swing.GroupLayout Listos1Layout = new javax.swing.GroupLayout(Listos1);
        Listos1.setLayout(Listos1Layout);
        Listos1Layout.setHorizontalGroup(
            Listos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Listos1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(Listos1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel11)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        Listos1Layout.setVerticalGroup(
            Listos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Listos1Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        Listos2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Listos2.setPreferredSize(new java.awt.Dimension(122, 187));

        ListaBlockedIn.setFocusable(false);
        ListaBlockedIn.setSelectionBackground(new java.awt.Color(51, 153, 255));
        ListaBlockedIn.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ListaBlockedInComponentShown(evt);
            }
        });
        ListaBlockedIn.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaBlockedInValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(ListaBlockedIn);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setText("Blocked");

        javax.swing.GroupLayout Listos2Layout = new javax.swing.GroupLayout(Listos2);
        Listos2.setLayout(Listos2Layout);
        Listos2Layout.setHorizontalGroup(
            Listos2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Listos2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(Listos2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Listos2Layout.setVerticalGroup(
            Listos2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Listos2Layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        Listos3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Listos3.setPreferredSize(new java.awt.Dimension(122, 187));

        ListaFinishedIn.setAutoscrolls(false);
        ListaFinishedIn.setFocusable(false);
        ListaFinishedIn.setSelectionBackground(new java.awt.Color(51, 153, 255));
        ListaFinishedIn.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ListaFinishedInComponentShown(evt);
            }
        });
        ListaFinishedIn.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaFinishedInValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(ListaFinishedIn);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Finished");

        javax.swing.GroupLayout Listos3Layout = new javax.swing.GroupLayout(Listos3);
        Listos3.setLayout(Listos3Layout);
        Listos3Layout.setHorizontalGroup(
            Listos3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Listos3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(Listos3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Listos3Layout.setVerticalGroup(
            Listos3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Listos3Layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        errorTexto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        errorTexto.setForeground(new java.awt.Color(255, 0, 0));
        errorTexto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        errorTexto.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        errorTexto.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        botonInterrupcion.setBackground(new java.awt.Color(255, 204, 102));
        botonInterrupcion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        botonInterrupcion.setText("Interrumpir");
        botonInterrupcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInterrupcionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(232, 232, 232)
                                .addComponent(Listos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(Listos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(Listos2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(Listos3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Ejecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(dropdownInterrupcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonInterrupcion, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(panelCPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PanelCPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errorTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(dropdownInterrupcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tiempo)
                    .addComponent(Ejecutar)
                    .addComponent(botonInterrupcion))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Listos, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Listos1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Listos2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Listos3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(PanelCPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(errorTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelCPU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EjecutarActionPerformed
        conte.reloj++;
        String relojS = "" + conte.reloj;
        tiempo.setText(relojS);        
        conte.dispatchContenedor(conte.reloj);
        Vector<String> nombres;
        //READY
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaReady.size(); x++){
            nombres.add(conte.listaReady.get(x).nombre);
        }
        ListaRedyIn.setListData(nombres);

        //RUNNING
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaRunning.size(); x++){
            nombres.add(conte.listaRunning.get(x).nombre);
        }
        ListaRunningIn.setListData(nombres);

        //BLOCKED
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaBlocked.size(); x++){
            nombres.add(conte.listaBlocked.get(x).nombre);
        }
        ListaBlockedIn.setListData(nombres);

        //FINISHED
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaFinished.size(); x++){
            nombres.add(conte.listaFinished.get(x).nombre);
        }
        ListaFinishedIn.setListData(nombres);
        
        
        if(conte.listaRunning.size() > 0 && conte.listaRunning.get(0) != null) {
            cpuNombreIn.setText(conte.listaRunning.get(0).nombre);
            cpuTiempoIn.setText(""+conte.listaRunning.get(0).tiempoLlegada);
            cpuAsignadoIn.setText(""+conte.listaRunning.get(0).cpuAsignado);
            cpuEnvejecimientoIn.setText(""+conte.listaRunning.get(0).envejecimiento);
            cpuRestanteIn.setText(""+conte.listaRunning.get(0).cpuRestante);
            cpuQuantumIn.setText(""+conte.listaRunning.get(0).quantumRestante);
        }
        
        
    }//GEN-LAST:event_EjecutarActionPerformed

    private void dropdownInterrupcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropdownInterrupcionActionPerformed
        
    }//GEN-LAST:event_dropdownInterrupcionActionPerformed

    private void ListaRedyInComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ListaRedyInComponentShown
    }//GEN-LAST:event_ListaRedyInComponentShown

    private void ListaRunningInComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ListaRunningInComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_ListaRunningInComponentShown

    private void ListaBlockedInComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ListaBlockedInComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_ListaBlockedInComponentShown

    private void ListaFinishedInComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ListaFinishedInComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_ListaFinishedInComponentShown

    private void nombreEjecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreEjecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreEjecActionPerformed

    private void nombreProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreProcesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreProcesoActionPerformed

    private void agregarProcesosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarProcesosActionPerformed
        
        ListModel<String> nombreLista = ListaRedyIn.getModel();
        Vector<String> nombres = new Vector<String>();
        
        for (int x = 0; x < conte.listaReady.size(); x++){
            nombres.add(conte.listaReady.get(x).nombre);
        }

        ListModel<String> nombreListaR = ListaRunningIn.getModel();
        Vector<String> nombresR = new Vector<String>();
        
        for (int x = 0; x < conte.listaRunning.size(); x++){
            nombresR.add(conte.listaRunning.get(x).nombre);
        }
        try{
            Proceso p = new Proceso(nombreProceso.getText().trim(), Integer.parseInt(nombrePagina.getText()), Integer.parseInt(nombreEjec.getText()), conte.reloj);
            if("".equals(p.nombre)) throw new Exception();
            conte.listaReady.add(p);
            nombres.add(p.nombre);
            conte.reloj++;
            String relojS = "" + conte.reloj;
            tiempo.setText(relojS);
            conte.dispatchContenedor(conte.reloj);
            ListaRedyIn.setListData(nombres);
            ListaRunningIn.setListData(nombresR);
            nombreProceso.setText("");
            nombrePagina.setText("");
            nombreEjec.setText("");
            errorTexto.setForeground(new Color(52, 186, 38));
            errorTexto.setText("A√±adido con √©xito");
        }

        catch (Exception e) {
            errorTexto.setForeground(new Color(255, 0, 0));
            errorTexto.setText("<html>ERROR: Debes llenar todos los campos con valores apropiados</html>");
        }
    }//GEN-LAST:event_agregarProcesosActionPerformed

    private void dropdownSchedulingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropdownSchedulingActionPerformed
        conte.metodoScheduling = dropdownScheduling.getSelectedItem().toString();
        if (dropdownScheduling.getSelectedItem().toString() != "Round Robin") TamQuantum.setEnabled(false);
        else TamQuantum.setEnabled(true);
    }//GEN-LAST:event_dropdownSchedulingActionPerformed

    private void botonInterrupcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInterrupcionActionPerformed
        
        conte.reloj++;
        String relojS = "" + conte.reloj;
        tiempo.setText(relojS);

        conte.metodoScheduling = dropdownScheduling.getSelectedItem().toString();
        if("SVC de Solicitud de I/O".equals(dropdownInterrupcion.getSelectedItem().toString()) ) conte.interrupcionSVC_IO();
        else if("SVC de Terminacion Normal".equals(dropdownInterrupcion.getSelectedItem().toString()) ) conte.interrupcionSVC_TNormal();
        else if("SVC de Solicitud de Fecha".equals(dropdownInterrupcion.getSelectedItem().toString()) ) conte.interrupcionSVC_Fecha();
        else if("Error de Programa".equals(dropdownInterrupcion.getSelectedItem().toString()) ) conte.interrupcionErrorPrograma();
        else if("Externa de Quantum Expirado".equals(dropdownInterrupcion.getSelectedItem().toString()) ) conte.interrupcionExterna_Quantum();        
        else if("Dispositivo de I/O".equals(dropdownInterrupcion.getSelectedItem().toString()) ) conte.interrupcionDispositivoIO();  
        else conte.dispatchContenedor(conte.reloj);
        errorTexto.setForeground(Color.blue);
        errorTexto.setText(dropdownInterrupcion.getSelectedItem().toString()); 
        ListModel<String> nombreLista;
        Vector<String> nombres;

        //READY
        nombreLista = ListaRedyIn.getModel();
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaReady.size(); x++){
            nombres.add(conte.listaReady.get(x).nombre);
        }
        ListaRedyIn.setListData(nombres);

        //RUNNING
        nombreLista = ListaRunningIn.getModel();
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaRunning.size(); x++){
            nombres.add(conte.listaRunning.get(x).nombre);
        }
        ListaRunningIn.setListData(nombres);

        //BLOCKED
        nombreLista = ListaBlockedIn.getModel();
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaBlocked.size(); x++){
            nombres.add(conte.listaBlocked.get(x).nombre);
        }
        ListaBlockedIn.setListData(nombres);

        //FINISHED
        nombreLista = ListaFinishedIn.getModel();
        nombres = new Vector<String>();
        for (int x = 0; x < conte.listaFinished.size(); x++){
            nombres.add(conte.listaFinished.get(x).nombre);
        }
        ListaFinishedIn.setListData(nombres);

        imprimirDatos();

    }//GEN-LAST:event_botonInterrupcionActionPerformed

    private void TamQuantumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TamQuantumActionPerformed
        conte.tamanioQuantum = Integer.parseInt(TamQuantum.getText().trim());
        System.out.println(conte.tamanioQuantum);
    }//GEN-LAST:event_TamQuantumActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        
    }//GEN-LAST:event_formComponentShown

    private void ListaRedyInValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaRedyInValueChanged
        ListaRunningIn.clearSelection();
        ListaBlockedIn.clearSelection();
        ListaFinishedIn.clearSelection();
        procesoLista = ListaRedyIn.getSelectedValue();
        listaIndice = "Ready";
        imprimirDatos();
    }//GEN-LAST:event_ListaRedyInValueChanged

    private void ListaRunningInValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaRunningInValueChanged
        ListaRedyIn.clearSelection();
        ListaBlockedIn.clearSelection();
        ListaFinishedIn.clearSelection();
        procesoLista = ListaRunningIn.getSelectedValue();
        listaIndice = "Running";
        imprimirDatos();
    }//GEN-LAST:event_ListaRunningInValueChanged

    private void ListaBlockedInValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaBlockedInValueChanged
        ListaRedyIn.clearSelection();
        ListaRunningIn.clearSelection();
        ListaFinishedIn.clearSelection();
        procesoLista = ListaBlockedIn.getSelectedValue();
        listaIndice = "Blocked";
        imprimirDatos();
    }//GEN-LAST:event_ListaBlockedInValueChanged

    private void ListaFinishedInValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaFinishedInValueChanged
        ListaRedyIn.clearSelection();
        ListaBlockedIn.clearSelection();
        ListaRunningIn.clearSelection();
        procesoLista = ListaFinishedIn.getSelectedValue();
        listaIndice = "Finished";
        imprimirDatos();
    }//GEN-LAST:event_ListaFinishedInValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kernel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kernel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kernel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kernel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
// CREO QUE AQUI
                new Kernel().setVisible(true);
            }
        });
        
       
        
    }

    public void imprimirDatos() {
        if(listaIndice == "Ready") {
            for(int i = 0; i < conte.listaReady.size(); i++) {
                if(conte.listaReady.get(i).nombre == procesoLista) {
                    cpuNombreIn.setText(conte.listaReady.get(i).nombre);
                    cpuTiempoIn.setText(""+conte.listaReady.get(i).tiempoLlegada);
                    cpuAsignadoIn.setText(""+conte.listaReady.get(i).cpuAsignado);
                    cpuEnvejecimientoIn.setText(""+conte.listaReady.get(i).envejecimiento);
                    cpuRestanteIn.setText(""+conte.listaReady.get(i).cpuRestante);
                    cpuQuantumIn.setText(""+conte.listaReady.get(i).quantumRestante);
                }
            }
        }

        if(listaIndice == "Running") {
                for(int i = 0; i < conte.listaRunning.size(); i++) {
                    if(conte.listaRunning.get(i).nombre == procesoLista) {
                        cpuNombreIn.setText(conte.listaRunning.get(i).nombre);
                        cpuTiempoIn.setText(""+conte.listaRunning.get(i).tiempoLlegada);
                        cpuAsignadoIn.setText(""+conte.listaRunning.get(i).cpuAsignado);
                        cpuEnvejecimientoIn.setText(""+conte.listaRunning.get(i).envejecimiento);
                        cpuRestanteIn.setText(""+conte.listaRunning.get(i).cpuRestante);
                        cpuQuantumIn.setText(""+conte.listaRunning.get(i).quantumRestante);
                    }
                }
            }

        if(listaIndice == "Blocked") {
                for(int i = 0; i < conte.listaBlocked.size(); i++) {
                    if(conte.listaBlocked.get(i).nombre == procesoLista) {
                        cpuNombreIn.setText(conte.listaBlocked.get(i).nombre);
                        cpuTiempoIn.setText(""+conte.listaBlocked.get(i).tiempoLlegada);
                        cpuAsignadoIn.setText(""+conte.listaBlocked.get(i).cpuAsignado);
                        cpuEnvejecimientoIn.setText(""+conte.listaBlocked.get(i).envejecimiento);
                        cpuRestanteIn.setText(""+conte.listaBlocked.get(i).cpuRestante);
                        cpuQuantumIn.setText(""+conte.listaBlocked.get(i).quantumRestante);
                    }
                }
            }

        if(listaIndice == "Finished") {
                for(int i = 0; i < conte.listaFinished.size(); i++) {
                    if(conte.listaFinished.get(i).nombre == procesoLista) {
                        cpuNombreIn.setText(conte.listaFinished.get(i).nombre);
                        cpuTiempoIn.setText(""+conte.listaFinished.get(i).tiempoLlegada);
                        cpuAsignadoIn.setText(""+conte.listaFinished.get(i).cpuAsignado);
                        cpuEnvejecimientoIn.setText(""+conte.listaFinished.get(i).envejecimiento);
                        cpuRestanteIn.setText(""+conte.listaFinished.get(i).cpuRestante);
                        cpuQuantumIn.setText(""+conte.listaFinished.get(i).quantumRestante);
                    }
                }
            }

        if(listaIndice == "") {
                if(conte.listaRunning.size() > 0 && conte.listaRunning.get(0) != null) {
                    cpuNombreIn.setText(conte.listaRunning.get(0).nombre);
                    cpuTiempoIn.setText(""+conte.listaRunning.get(0).tiempoLlegada);
                    cpuAsignadoIn.setText(""+conte.listaRunning.get(0).cpuAsignado);
                    cpuEnvejecimientoIn.setText(""+conte.listaRunning.get(0).envejecimiento);
                    cpuRestanteIn.setText(""+conte.listaRunning.get(0).cpuRestante);
                    cpuQuantumIn.setText(""+conte.listaRunning.get(0).quantumRestante);
                }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ejecutar;
    private javax.swing.JList<String> ListaBlockedIn;
    private javax.swing.JList<String> ListaFinishedIn;
    private javax.swing.JList<String> ListaRedyIn;
    private javax.swing.JList<String> ListaRunningIn;
    private javax.swing.JPanel Listos;
    private javax.swing.JPanel Listos1;
    private javax.swing.JPanel Listos2;
    private javax.swing.JPanel Listos3;
    private javax.swing.JPanel Nuevo;
    private javax.swing.JPanel PanelCPU;
    private javax.swing.JTextField TamQuantum;
    private javax.swing.JButton agregarProcesos;
    private javax.swing.JButton botonInterrupcion;
    private javax.swing.JLabel cpuAsignadoIn;
    private javax.swing.JLabel cpuEnvejecimientoIn;
    private javax.swing.JLabel cpuNombreIn;
    private javax.swing.JLabel cpuQuantumIn;
    private javax.swing.JLabel cpuRestanteIn;
    private javax.swing.JLabel cpuTiempoIn;
    private javax.swing.JComboBox<String> dropdownInterrupcion;
    private javax.swing.JComboBox<String> dropdownScheduling;
    private javax.swing.JLabel errorTexto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField nombreEjec;
    private javax.swing.JTextField nombrePagina;
    private javax.swing.JTextField nombreProceso;
    private javax.swing.JLabel nombreSchedule;
    private javax.swing.JLabel nombreSchedule1;
    private javax.swing.JLabel nombreSchedule2;
    private javax.swing.JLabel nombreSchedule3;
    private javax.swing.JLabel nombreSchedule4;
    private javax.swing.JLabel nombreSchedule5;
    private javax.swing.JPanel panelCPU;
    private javax.swing.JLabel tiempo;
    // End of variables declaration//GEN-END:variables
}
